<?xml version="1.0" encoding="UTF-8"?>
<files psalm-version="4.23.0@f1fe6ff483bf325c803df9f510d09a03fd796f88">
  <file src="src/Builder/FlattenedFieldsWithTypeTrait.php">
    <InvalidReturnType occurrences="4">
      <code>bool[]</code>
      <code>float[]</code>
      <code>int[]</code>
      <code>string[]</code>
    </InvalidReturnType>
  </file>
  <file src="src/DBPassToLowerLayerTrait.php">
    <MissingConstructor occurrences="1">
      <code>$lowerLayer</code>
    </MissingConstructor>
  </file>
  <file src="src/Doctrine/DBAbstractImplementation.php">
    <PossiblyNullArgument occurrences="1">
      <code>$select['offset'] ?? null</code>
    </PossiblyNullArgument>
  </file>
  <file src="src/Doctrine/DBErrorHandler.php">
    <InternalMethod occurrences="1">
      <code>connect</code>
    </InternalMethod>
  </file>
  <file src="tests/DBPassToLowerLayerTest.php">
    <InvalidPropertyAssignmentValue occurrences="1">
      <code>\Mockery::mock(DBPassToLowerLayerTrait::class)-&gt;makePartial()</code>
    </InvalidPropertyAssignmentValue>
    <TypeDoesNotContainType occurrences="1">
      <code>assertSame</code>
    </TypeDoesNotContainType>
    <UndefinedClass occurrences="2">
      <code>$this-&gt;dbLowerLayerObject</code>
      <code>\Mockery::mock(DBPassToLowerLayerTrait::class)</code>
    </UndefinedClass>
    <UndefinedInterfaceMethod occurrences="1">
      <code>setLowerLayer</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="tests/DoctrineErrorHandlerTest.php">
    <TypeDoesNotContainType occurrences="1">
      <code>assertSame</code>
    </TypeDoesNotContainType>
  </file>
  <file src="tests/Integration/AbstractDoctrineIntegrationTests.php">
    <InvalidScalarArgument occurrences="2">
      <code>$accountData['balance']</code>
      <code>$accountData['balance']</code>
    </InvalidScalarArgument>
    <PossiblyNullReference occurrences="2">
      <code>fetchOne</code>
      <code>insert</code>
    </PossiblyNullReference>
  </file>
  <file src="tests/LargeObjectTest.php">
    <RedundantConditionGivenDocblockType occurrences="1">
      <code>\is_resource($obj-&gt;getStream())</code>
    </RedundantConditionGivenDocblockType>
  </file>
</files>
